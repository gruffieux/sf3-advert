{# Cette vue n'hérite de personne. Elle est en électron libre. #}

<h3>{{ 'application.form'|trans }}</h3>

<div class="well">
	{# Formulaire par défault #}
	{# form(form) #}
	
	{# Balise ouvrante du formulaire #}
	{{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}
	
	{# Les erreurs générales du formulaire #}
	{{ form_errors(form) }}
	
	{# Génération manuelle et éclatée #}
	<div class="form-group">
		{{ form_label(form.content, 'Votre message'|trans, {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
		
		{# Affichage des erreurs pour ce champ #}
		{{ form_errors(form.content) }}
		
		<div class="col-sm-10">
			{# Génération du champ #}
			{{ form_widget(form.content, {'attr': {'class': 'form-control'}}) }}
		</div>
	</div>

	{# Génération du label + error + widget sur une ligne #}
	{# store the prototype on the data-prototype attribute #}
    <ul id="doc-fields-list" data-prototype="{{ form_widget(form.documents.vars.prototype)|e }}">
    {% for document in form.documents %}
        <li>
            {{ form_widget(document.title, {'attr': {'class': 'form-control'}}) }}
            {{ form_widget(document.file, {'attr': {'class': 'form-control'}}) }}
        </li>
    {% endfor %}
    </ul>
	<a href="#" id="add-document">{{ 'Ajouter un document'|trans }}</a>

	{# Pour le bouton submit, pas de label ni d'erreur #}
	{{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}
	
	{# Génération auto des champs pas encore écrits. Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony) #}
	{{ form_rest(form) }}
	
	{# Balise fermante du formulaire #}
	{{ form_end(form) }}
</div>

<script type="text/javascript">
    // keep track of how many email fields have been rendered
    var docCount = '{{ form.documents|length }}';

    jQuery(document).ready(function() {
        jQuery('#add-document').click(function(e) {
            e.preventDefault();

            var docList = jQuery('#doc-fields-list');

            // grab the prototype template
            var newWidget = docList.attr('data-prototype');
            // replace the "__name__" used in the id and name of the prototype
            // with a number that's unique to your emails
            // end name attribute looks like name="contact[emails][2]"
            newWidget = newWidget.replace(/__name__/g, docCount);
            docCount++;

            // create a new list element and add it to the list
            var newLi = jQuery('<li></li>').html(newWidget);
            newLi.appendTo(docList);
        });
    })
</script>